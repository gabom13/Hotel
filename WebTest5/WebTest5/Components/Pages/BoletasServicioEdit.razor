@page "/boletasservicioedit/{id:int}"

@using WebTest5.Components.Interface
@using WebTest5.Components.Model

@rendermode InteractiveServer

@inject NavigationManager Navigation
@inject IDialogService DialogService
@inject IServiciosService serviciosService
@inject IUsuariosService usuariosService
@inject IClientesService clientesService
@inject IReservasService reservasService

@if (boletaServicio == null && reservas == null && clientes == null && usuarios == null && servicios == null)
{
	<MudPaper Height="400px" Class="justify-center d-flex">
		<MudProgressCircular Color="Color.Dark" Indeterminate="true" Size="Size.Large" Class="align-self-center" />
	</MudPaper>
}
else
{
	@if (!login.isLoggedIn)
	{
		<MudText Typo="Typo.h6">Inicia sesion para continuar</MudText>
	}
	else
	{
	<MudGrid>
		<MudItem xs="11" sm="11">
			<MudCard Elevation="5">
				<MudCardHeader Class="justify-center d-flex">
					<MudText Typo="Typo.h5">BOLETA DE SERVICIO</MudText>
				</MudCardHeader>
				<MudCardContent>
					<MudForm @ref="@form" Model="@boletaServicio" Class="px-4">
						<MudStack Row="true">
							<MudSelect T="int" Label="Servicio" @bind-Value="boletaServicio.Servicio" Margin="Margin.Normal" Required="true" AnchorOrigin="Origin.BottomCenter">
								@if (servicios != null)
								@foreach (var servicio in servicios)
								{
									<MudSelectItem Value="servicio.Id">@servicio.Nombre</MudSelectItem>
								}							
							</MudSelect>
							<MudButton OnClick="@ShowServicioDialog" Variant="Variant.Outlined" Color="Color.Primary" Class="add-item-btn ma-4">Añadir Servicio</MudButton>
							<MudNumericField T="int" Label="Precio (Bs)" @bind-Value="boletaServicio.Precio" Required="true" RequiredError="¡Debe ingresar un precio!" />
						</MudStack>
						<MudSelect T="int" Label="Usuario" @bind-Value="boletaServicio.Usuario" Margin="Margin.Normal" Required="true" AnchorOrigin="Origin.BottomCenter">
							@if (usuarios != null)
							@foreach (var usuario in usuarios)
							{
								<MudSelectItem Value="usuario.Cid">@usuario.Nombre_Completo</MudSelectItem>
							}
						</MudSelect>
						<MudTextField T="string" Label="Nota" @bind-Value="boletaServicio.Nota" Margin="Margin.Normal" Required="false" AutoGrow />
					</MudForm>
				</MudCardContent>
				<MudCardActions>
					<MudButton Variant="Variant.Filled" Color="Color.Success" Class="ml-auto" Disabled="@disabled" OnClick="@(async () => await Submit())">Guardar</MudButton>
					<MudButton Variant="Variant.Outlined" Color="Color.Error" DisableElevation="true" OnClick="Cancel" Class="mx-2">Cancelar</MudButton>
				</MudCardActions>
			</MudCard>
		</MudItem>
	</MudGrid>
	}
}
@code {
	[Parameter]
	public int Id { get; set; }
	MudForm form;
	BoletasServicioModel boletaServicio;
	IEnumerable<ServiciosModel> servicios;
	IEnumerable<UsuariosModel> usuarios;
	IEnumerable<ClientesModel> clientes;
	IEnumerable<ReservasModel> reservas;
	bool disabled = false;
	LoginSingleton login;

	protected override async Task OnInitializedAsync()
	{
		login = await LoginSingleton.GetInstance();
		boletaServicio = await serviciosService.GetBoletaServicio(Id);
		servicios = await serviciosService.GetServicios();
		usuarios = await usuariosService.GetUsuarios();
		clientes = await clientesService.GetClientes();
		reservas = await reservasService.GetReservas();		
	}

	private async Task Submit()
	{
		await form.Validate();

		if (form.IsValid)
		{
			disabled = true;
			await serviciosService.UpdateBoletaServicio(boletaServicio);
			Navigation.NavigateTo("/boletasservicio");
		}
	}

	private void Cancel()
	{
		Navigation.NavigateTo("/boletasservicio");
	}

	private async Task ShowServicioDialog()
	{
		DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };
		var dialog = DialogService.Show<DialogProfesion>("Añadir Servicio", closeOnEscapeKey);
		var result = await dialog.Result;

		if (!result.Canceled)
		{
			servicios = await serviciosService.GetServicios();
		}
	}
}
